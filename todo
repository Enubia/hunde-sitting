Database:
    ✔ check core tables for missing/unnecessary columns @done(25-03-15 11:34)
    ✔ add indexes on foreign keys @done(25-03-15 11:34)
    ✔ rethink user roles, do we need them? (probably not in the beginning) @done(25-03-15 10:46)
    ✔ check indexes (single, composite) @done(25-03-15 11:51)
    
    ☐ create additional indexes if needed (will probably see what else we need once we start implementing the api and frontend)

    ☐ check if postgis is needed or we can create a simple algorithm to determine a list of closest sitters

    ☐ check postgres connection pool size (see if we can increase it to 10, depending on server cpu and memory)

Api:
    
    Caching:
        ☐ redis? (probably not for the beginning since server resources are limited)
        ☐ in-memory storage?

    Logging:
        ✔ revisit outgoing log format @done(25-03-19 15:14)
        ✔ add timestamp as prefix to log messages @done(25-03-19 15:14)

        ☐ refactor logging: console logging is not needed because file-based logging is more straightforward to collect later on (grafana/sentry etc.)
        
        ☐ logger cannot handle rotating logs, needs to be fixed
        
        ☐ add requestLog functions which have the requestId assigned to them so that we can see what the request was doing
        
Web:
    ☐ maybe look into leaflet.js for map rendering
