/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type AuthProvider = "apple" | "facebook" | "google";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type LocationType = "client_home" | "other" | "park" | "sitter_home";

export type Numeric = ColumnType<string, number | string, number | string>;

export type ServiceType = "boarding" | "daycare" | "dog_walking" | "grooming" | "overnight_stay" | "pet_taxi" | "training" | "vet_visits";

export type Sex = "female" | "male";

export type SizeCategory = "giant" | "large" | "medium" | "small" | "tiny";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type UserTypes = "admin" | "reviewer";

export type VaccinationStatus = "fully_vaccinated" | "not_vaccinated" | "partially_vaccinated" | "unknown";

export type VerificationStatus = "approved" | "pending" | "rejected";

export interface Availability {
  created_at: Generated<Timestamp>;
  day_of_week: number;
  end_time: string;
  id: Generated<number>;
  sitter_id: number;
  start_time: string;
  updated_at: Generated<Timestamp>;
}

export interface Bookings {
  client_id: number;
  created_at: Generated<Timestamp>;
  dog_id: number;
  end_date: Timestamp;
  id: Generated<number>;
  location_address: string | null;
  location_type: LocationType;
  service_id: number | null;
  sitter_id: number;
  special_instructions: string | null;
  start_date: Timestamp;
  total_price: Numeric | null;
  updated_at: Generated<Timestamp>;
}

export interface DogBreeds {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  name: string;
  requires_certificate: Generated<boolean>;
  size_category: SizeCategory;
}

export interface Dogs {
  age_months: number | null;
  age_years: number | null;
  breed_id: number | null;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  is_neutered: boolean | null;
  medical_conditions: string | null;
  mixed_breed: Generated<boolean>;
  name: string;
  owner_id: number;
  photo_url: string | null;
  sex: Sex;
  special_care_requirements: string | null;
  updated_at: Generated<Timestamp>;
  vaccination_status: Generated<VaccinationStatus>;
  weight_kg: Numeric | null;
}

export interface OauthAccounts {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  provider: AuthProvider;
  updated_at: Generated<Timestamp>;
  user_id: number;
}

export interface Reviews {
  booking_id: number | null;
  comment: string | null;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  rating: number;
  reviewee_id: number;
  reviewer_id: number;
  updated_at: Generated<Timestamp>;
}

export interface SitterBreedSpecialties {
  additional_notes: string | null;
  breed_id: number;
  created_at: Generated<Timestamp>;
  experience_years: Generated<number>;
  sitter_id: number;
}

export interface SitterCertificates {
  admin_notes: string | null;
  certificate_file_url: string | null;
  certificate_name: string;
  created_at: Generated<Timestamp>;
  expiration_date: Timestamp | null;
  id: Generated<number>;
  issue_date: Timestamp | null;
  issuing_organization: string;
  sitter_id: number;
  updated_at: Generated<Timestamp>;
  verification_status: Generated<VerificationStatus>;
}

export interface Sitters {
  bio: string | null;
  can_host_at_home: Generated<boolean>;
  created_at: Generated<Timestamp>;
  daily_rate: Numeric | null;
  hourly_rate: Numeric | null;
  id: Generated<number>;
  is_available: Generated<boolean>;
  max_dogs_at_once: Generated<number>;
  service_radius_km: Numeric | null;
  updated_at: Generated<Timestamp>;
  user_id: number;
  verification_status: Generated<VerificationStatus>;
  years_experience: number | null;
}

export interface SitterServices {
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<number>;
  price: Numeric | null;
  service_name: ServiceType;
  sitter_id: number;
  updated_at: Generated<Timestamp>;
}

export interface UserGroups {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  type: UserTypes;
  updated_at: Generated<Timestamp>;
}

export interface Users {
  address: string | null;
  avatar_url: string | null;
  bio: string | null;
  city: string | null;
  country: string | null;
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<number>;
  is_active: Generated<boolean>;
  is_email_verified: Generated<boolean>;
  name: string;
  permissions: Generated<Json>;
  phone: string | null;
  postal_code: string | null;
  state: string | null;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  availability: Availability;
  bookings: Bookings;
  dog_breeds: DogBreeds;
  dogs: Dogs;
  oauth_accounts: OauthAccounts;
  reviews: Reviews;
  sitter_breed_specialties: SitterBreedSpecialties;
  sitter_certificates: SitterCertificates;
  sitter_services: SitterServices;
  sitters: Sitters;
  user_groups: UserGroups;
  users: Users;
}
