/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type ActionName = "DELETE" | "INSERT" | "UPDATE";

export type AdminRole = "admin" | "super_admin";

export type AuthProvider = "apple" | "facebook" | "github" | "google";

export type BookingStatus = "cancelled" | "completed" | "confirmed" | "in_progress" | "pending" | "rejected";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type LocationType = "client_home" | "other" | "park" | "sitter_home";

export type Numeric = ColumnType<string, number | string, number | string>;

export type PermissionLevel = "admin" | "read" | "write";

export type ResourceName = "admin_users" | "availability" | "bookings" | "dog_breeds" | "dogs" | "group_permissions" | "oauth_accounts" | "reviews" | "revisions" | "sitter_breed_specialties" | "sitter_certificates" | "sitter_services" | "sitters" | "unavailable_dates" | "user_group_memberships" | "user_groups" | "user_permissions" | "users";

export type ServiceType = "boarding" | "daycare" | "dog_walking" | "grooming" | "overnight_stay" | "pet_taxi" | "training" | "vet_visits";

export type Sex = "female" | "male";

export type SizeCategory = "giant" | "large" | "medium" | "small" | "tiny";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type VaccinationStatus = "fully_vaccinated" | "not_vaccinated" | "partially_vaccinated" | "unknown";

export type VerificationStatus = "approved" | "pending" | "rejected";

export interface AdminUsers {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  role: Generated<AdminRole>;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface Availability {
  created_at: Generated<Timestamp>;
  day_of_week: number;
  end_time: string;
  id: Generated<string>;
  sitter_id: string;
  start_time: string;
  updated_at: Generated<Timestamp>;
}

export interface Bookings {
  client_id: string;
  created_at: Generated<Timestamp>;
  dog_id: string;
  end_date: Timestamp;
  id: Generated<string>;
  location_address: string | null;
  location_type: LocationType;
  service_id: string | null;
  sitter_id: string;
  special_instructions: string | null;
  start_date: Timestamp;
  status: Generated<BookingStatus>;
  total_price: Numeric | null;
  updated_at: Generated<Timestamp>;
}

export interface DogBreeds {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  name: string;
  requires_certificate: Generated<boolean | null>;
  size_category: SizeCategory;
  special_care_requirements: string | null;
}

export interface Dogs {
  age_months: number | null;
  age_years: number | null;
  breed_id: string | null;
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  is_neutered: boolean | null;
  medical_conditions: string | null;
  mixed_breed: Generated<boolean | null>;
  name: string;
  owner_id: string;
  photo_url: string | null;
  sex: Sex | null;
  special_needs: string | null;
  temperament: string | null;
  updated_at: Generated<Timestamp>;
  vaccination_status: Generated<VaccinationStatus | null>;
  weight_kg: Numeric | null;
}

export interface GeographyColumns {
  coord_dimension: number | null;
  f_geography_column: string | null;
  f_table_catalog: string | null;
  f_table_name: string | null;
  f_table_schema: string | null;
  srid: number | null;
  type: string | null;
}

export interface GeometryColumns {
  coord_dimension: number | null;
  f_geometry_column: string | null;
  f_table_catalog: string | null;
  f_table_name: string | null;
  f_table_schema: string | null;
  srid: number | null;
  type: string | null;
}

export interface GroupPermissions {
  created_at: Generated<Timestamp>;
  group_id: string;
  id: Generated<string>;
  permission: PermissionLevel;
  resource: ResourceName;
  updated_at: Generated<Timestamp>;
}

export interface OauthAccounts {
  access_token: string | null;
  created_at: Generated<Timestamp>;
  expires_at: Timestamp | null;
  id: Generated<string>;
  provider: AuthProvider;
  provider_user_id: string;
  refresh_token: string | null;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface Reviews {
  booking_id: string | null;
  comment: string | null;
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  rating: number;
  reviewee_id: string;
  reviewer_id: string;
  updated_at: Generated<Timestamp>;
}

export interface Revisions {
  action: ActionName;
  changed_fields: string[] | null;
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  new_values: Json | null;
  old_values: Json | null;
  record_id: string;
  table_name: string;
  user_id: string | null;
}

export interface SitterBreedSpecialties {
  additional_notes: string | null;
  breed_id: string;
  created_at: Generated<Timestamp>;
  experience_years: Generated<number | null>;
  sitter_id: string;
}

export interface SitterCertificates {
  admin_notes: string | null;
  certificate_file_path: string | null;
  certificate_name: string;
  created_at: Generated<Timestamp>;
  expiration_date: Timestamp | null;
  id: Generated<string>;
  issue_date: Timestamp | null;
  issuing_organization: string;
  sitter_id: string;
  updated_at: Generated<Timestamp>;
  verification_status: Generated<VerificationStatus | null>;
}

export interface Sitters {
  bio: string | null;
  can_host_at_home: Generated<boolean | null>;
  created_at: Generated<Timestamp>;
  daily_rate: Numeric | null;
  hourly_rate: Numeric | null;
  id: Generated<string>;
  is_available: Generated<boolean | null>;
  last_location_update: Timestamp | null;
  max_dogs_at_once: Generated<number | null>;
  service_radius_km: Numeric | null;
  updated_at: Generated<Timestamp>;
  user_id: string;
  verification_status: Generated<VerificationStatus>;
  years_experience: number | null;
}

export interface SitterServices {
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  is_available: Generated<boolean | null>;
  price: Numeric | null;
  service_name: ServiceType;
  sitter_id: string;
  updated_at: Generated<Timestamp>;
}

export interface SpatialRefSys {
  auth_name: string | null;
  auth_srid: number | null;
  proj4text: string | null;
  srid: number;
  srtext: string | null;
}

export interface UnavailableDates {
  created_at: Generated<Timestamp>;
  end_date: Timestamp;
  id: Generated<string>;
  reason: string | null;
  sitter_id: string;
  start_date: Timestamp;
  updated_at: Generated<Timestamp>;
}

export interface UserGroupMemberships {
  created_at: Generated<Timestamp>;
  group_id: string;
  user_id: string;
}

export interface UserGroups {
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface UserPermissions {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  permission: PermissionLevel;
  resource: ResourceName;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface Users {
  address: string | null;
  avatar_url: string | null;
  bio: string | null;
  city: string | null;
  country: string | null;
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<string>;
  is_active: Generated<boolean | null>;
  is_email_verified: Generated<boolean | null>;
  latitude: Numeric | null;
  location: string | null;
  longitude: Numeric | null;
  name: string;
  phone: string | null;
  postal_code: string | null;
  state: string | null;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  admin_users: AdminUsers;
  availability: Availability;
  bookings: Bookings;
  dog_breeds: DogBreeds;
  dogs: Dogs;
  geography_columns: GeographyColumns;
  geometry_columns: GeometryColumns;
  group_permissions: GroupPermissions;
  oauth_accounts: OauthAccounts;
  reviews: Reviews;
  revisions: Revisions;
  sitter_breed_specialties: SitterBreedSpecialties;
  sitter_certificates: SitterCertificates;
  sitter_services: SitterServices;
  sitters: Sitters;
  spatial_ref_sys: SpatialRefSys;
  unavailable_dates: UnavailableDates;
  user_group_memberships: UserGroupMemberships;
  user_groups: UserGroups;
  user_permissions: UserPermissions;
  users: Users;
}
